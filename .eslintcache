[{"/home/viet/devs/apps/react-app-starter/src/App.tsx":"1","/home/viet/devs/apps/react-app-starter/src/components/auth/auth.tsx":"2","/home/viet/devs/apps/react-app-starter/src/pages/Login.tsx":"3","/home/viet/devs/apps/react-app-starter/src/pages/Authenticated.tsx":"4","/home/viet/devs/apps/react-app-starter/src/components/sidebar/Sidebar.tsx":"5","/home/viet/devs/apps/react-app-starter/src/utils/routes.tsx":"6","/home/viet/devs/apps/react-app-starter/src/overmind/auth/state.ts":"7","/home/viet/devs/apps/react-app-starter/src/overmind/auth/actions.ts":"8","/home/viet/devs/apps/react-app-starter/src/overmind/auth/index.ts":"9","/home/viet/devs/apps/react-app-starter/src/overmind/auth/effects.ts":"10","/home/viet/devs/apps/react-app-starter/src/index.tsx":"11","/home/viet/devs/apps/react-app-starter/src/pages/Unauthenticated.tsx":"12"},{"size":955,"mtime":1610079528437,"results":"13","hashOfConfig":"14"},{"size":544,"mtime":1610079836481,"results":"15","hashOfConfig":"14"},{"size":426,"mtime":1610079913055,"results":"16","hashOfConfig":"14"},{"size":96,"mtime":1610069839435,"results":"17","hashOfConfig":"14"},{"size":1599,"mtime":1610079884938,"results":"18","hashOfConfig":"14"},{"size":702,"mtime":1610072676322,"results":"19","hashOfConfig":"14"},{"size":208,"mtime":1610077622273,"results":"20","hashOfConfig":"14"},{"size":1261,"mtime":1610078960231,"results":"21","hashOfConfig":"14"},{"size":263,"mtime":1610077387910,"results":"22","hashOfConfig":"14"},{"size":637,"mtime":1610077863139,"results":"23","hashOfConfig":"14"},{"size":765,"mtime":1610078700088,"results":"24","hashOfConfig":"14"},{"size":102,"mtime":1610069785249,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sn5m1z",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/viet/devs/apps/react-app-starter/src/App.tsx",[],"/home/viet/devs/apps/react-app-starter/src/components/auth/auth.tsx",[],"/home/viet/devs/apps/react-app-starter/src/pages/Login.tsx",["53","54"],"/home/viet/devs/apps/react-app-starter/src/pages/Authenticated.tsx",[],"/home/viet/devs/apps/react-app-starter/src/components/sidebar/Sidebar.tsx",["55"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useState } from \"../../overmind\";\nimport { authenticated, IRoute, unauthenticated } from \"../../utils/routes\";\nimport { PrivateRoute } from \"../auth/auth\";\n\nconst Sidebar = () => {\n  const { auth } = useState();\n  const routes = auth.user ? authenticated : unauthenticated;\n  const RouteComponent = auth.user ? PrivateRoute : Route;\n\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            padding: \"10px\",\n            width: \"40%\",\n            background: \"#f0f0f0\"\n          }}\n        >\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            {routes.map(route => (\n              <li key={route.path}>\n                <Link to={route.path}>{route.path}</Link>\n              </li>\n            ))}\n          </ul>\n\n          <Switch>\n            {routes.map((route, index) => (\n              <RouteComponent\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.sidebar />}\n              />\n            ))}\n          </Switch>\n        </div>\n\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              <RouteComponent\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default Sidebar;\n","/home/viet/devs/apps/react-app-starter/src/utils/routes.tsx",["56"],"/home/viet/devs/apps/react-app-starter/src/overmind/auth/state.ts",[],"/home/viet/devs/apps/react-app-starter/src/overmind/auth/actions.ts",["57"],"import { Action, AsyncAction, rehydrate } from 'overmind';\nimport { User } from '.';\nimport { initState } from './state';\n\ninterface ILoginReq {\n  username: string,\n  password: string\n}\nexport const login: AsyncAction<ILoginReq> = async (\n  { state, effects, actions },\n  { username, password }\n) => {\n  try {\n    const loginRequest = await effects.auth.api.login(username, password);\n    const { payload } = loginRequest;\n    switch (payload.login) {\n      case \"success\":\n        actions.auth.persistAuth({ user: payload.user, expiry: payload.expiry });\n        break;\n\n      case \"failed\":\n        actions.auth.deAuth();\n        break;\n    }\n  } catch {\n    actions.auth.deAuth();\n  }\n}\n\nexport const logout: AsyncAction = async ({ state, effects, actions }) => {\n  try {\n    const logoutRequest = await effects.auth.api.logout();\n    if (logoutRequest === true)\n      actions.auth.deAuth();\n    else {  }\n  } catch {  }\n};\n\nexport const persistAuth: Action<{\n  user: User,\n  expiry: string,\n}> = ({ state, effects, actions }, { user, expiry }) => {\n  state.auth.user = user;\n  state.auth.authExpiry = new Date(Date.parse(expiry));\n  state.auth.token = \"tok3n\";\n}\n\nexport const deAuth: Action = ({ state, effects, actions }) => {\n  state.auth = initState;\n}\n","/home/viet/devs/apps/react-app-starter/src/overmind/auth/index.ts",[],"/home/viet/devs/apps/react-app-starter/src/overmind/auth/effects.ts",[],"/home/viet/devs/apps/react-app-starter/src/index.tsx",[],["58","59"],"/home/viet/devs/apps/react-app-starter/src/pages/Unauthenticated.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":11,"column":7,"nodeType":"62","messageId":"63","endLine":11,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":14,"column":9,"nodeType":"62","messageId":"63","endLine":14,"endColumn":13},{"ruleId":"60","severity":1,"message":"65","line":8,"column":25,"nodeType":"62","messageId":"63","endLine":8,"endColumn":31},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":1,"column":31,"nodeType":"62","messageId":"63","endLine":1,"endColumn":40},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'from' is assigned a value but never used.","'IRoute' is defined but never used.","'JsxElement' is defined but never used.","'rehydrate' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-global-assign","no-unsafe-negation"]